pipeline {
    agent any
    tools{
        maven 'M2_HOME'
    }
    stages{
        stage("sonarcloud analysis"){
            steps{
                withSonarQubeEnv("sonarqube"){
                    sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Hossnia_testt'
                }
            }
        }

        stage("building artifact"){
            steps{
                sh 'mvn clean'
                sh 'mvn validate'
                sh 'mvn compile'
                sh 'mvn install'
                sh 'mvn package'
                sh 'mvn test'
            }
        }

        stage("Push artifact in jfrog"){
            steps{
                sh 'curl -uadmin:AP8gcgmmset5jeYChTJYDN6XmDd \
                -T target/bio*.jar \
                "http://ec2-52-91-184-121.compute-1.amazonaws.com:8081/artifactory/pipeline/bio_${BUILD_TAG}"'
            }
        }

        stage("create a docker image"){
            steps{
                sh 'docker build -t geo-image .'
            }
        }

        stage("log in to ECR"){
            steps{
                sh 'aws ecr get-login-password \
                --region us-east-1 | docker login --username AWS \
                --password-stdin 672451395673.dkr.ecr.us-east-1.amazonaws.com'
            }
        }

        stage("rename docker image"){
            steps{
                sh 'docker tag geo-image:latest 672451395673.dkr.ecr.us-east-1.amazonaws.com/jenkins-pipeline:latest'
            }
        }

        stage("push image to ECR"){
            steps{
                sh 'docker push 672451395673.dkr.ecr.us-east-1.amazonaws.com/jenkins-pipeline:latest'
            }
        }
    }
}